@model SalaoBeleza.ViewModels.calendarAuxViewModel

@{
    string auxHorario = "teste";
    string auxNomeUsuario = "teste";
}


<!DOCTYPE html>
<html>
<head>

    <link href="https://fonts.googleapis.com/css?family=Roboto:100,100i,300,300i,400,400i,500,500i,700,700i,900,900i" rel="stylesheet">
    <style>
        .colune-branca {
            flex-grow: 1.5;
            margin-right: 5px;
            display: flow-root;
        }

        .coluna-pessoa-calendar {
            flex-grow: 2;
            margin-right: 5px;
            display: flex;
            flex-direction: column;
        }

        .nome-pessoa-calendar {
            background-color: rgb(109,90,84);
            flex-grow: 1;
            color: white;
            text-align: center;
            font-size: large;
            height: 100%;
            max-height: 40px;
        }

        .coluna-horario {
            flex-grow: 1;
            background-color: rgb(240,240,240);
            height: 50%;
            max-height: 35px;
            margin-top: 2px;
            justify-content: center;
            align-items: center;
            display: flex;
        }

        .descricao-agendamento {
            text-align: center;
            background-color: rgba(0,0,255,0.2);
            border-radius: 5px;
            margin-top: 5px;
            height: 100%;
        }
    </style>
</head>
<body>
    <div class="container-fluid">
        <div class="row" style="background-color: rgb(243,244,246)">
            <div class="col">
                Agenda
            </div>
        </div>
        <div class="row">
            <div class="col-sm-3">
                <div id="datetimepicker12"></div>
            </div>
            <div class="col-sm-9">
                grid com calendario
                <div class="row" style="display:flex; flex-direction:row">
                    <div class="colune-branca">
                        <div class="nome-pessoa-calendar">
                        </div>
                        @foreach (var item in Model.itensCalendario)
                        {
                            //verifica se o horario mudou, caso sim, adiciona uma nova div.
                            if (item.strHorario != auxHorario)
                            {
                                auxHorario = item.strHorario;
                                <div class="coluna-horario">
                                    <div>@item.strHorario</div>
                                </div>

                            }

                        }
                    </div>
                    @foreach (var item in Model.funcionarios)
                    {

                            var auxCalendario = Model.itensCalendario.Where(c => c.nomeUsuario == item.Name);
                            auxNomeUsuario = item.Name;
                            <div class="colune-branca">

                                <div class="nome-pessoa-calendar">
                                    @item.Name
                                </div>
                               
                                @foreach (var calendarioPorUser in auxCalendario)
                                {
                                     <div class="coluna-horario">@calendarioPorUser.descricao</div>
                                }
                                
                            </div>
                        

                        //verifica se o horario mudou, caso sim, adiciona uma nova div.

                    }
                    </div>
                </div>
            </div>
        </div>
    </body>
</html>

@Scripts.Render("~/bundles/jquery")
<script type="text/javascript">
    $(function () {
        $('#datetimepicker12').datetimepicker({
            inline: true,
            sideBySide: false,
            format: 'L'
        });
    });
</script>

